{"version":3,"sources":["hooks/useLogRows.ts","components/ShowColumns.tsx","components/TaskSheet.tsx","components/LogTable.tsx","components/LogPlayer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["flattenObject","ob","toReturn","i","hasOwnProperty","flatObject","x","String","getlogRows","logRaws","map","log","index","_id","datumType","timestamp","value","replaceAll","JSON","parse","e","useLogRows","fileName","useState","logData","setLogData","logColumns","useMemo","reduce","acc","row","keys","Object","_","union","useEffect","a","readRemoteFile","worker","complete","results","data","logRows","item","pick","res","ac","logs","assign","download","getLogs","defaultDatumTypes","columnData","title","key","selectable","children","ShowColumns","originalLogColumns","setShowColumnIndex","setShowRowIndex","setCol","setDatumTypes","onCheckColumn","useCallback","checked","allChecked","halfCheckedKeys","columns","uniq","filter","col","includes","split","onSelectColumn","selected","length","className","checkable","treeData","onCheck","onSelect","defaultCheckedKeys","initTaskData","range","readOnly","genInit","TaskSheet","taskData","hideRowIndicators","hideColumnIndicators","dayjs","extend","localizedFormat","Styles","styled","div","CustomRow","passed","CustomCol","LogTable","sec","sync","start","setSelectedTimestamp","setSync","selectedTimestamp","playerRef","linked","selectedDatumType","setSelectedDatumType","logState","setLogState","showColumnIndex","showRowIndex","initShowColumnIndex","Array","fill","showColumns","sort","b","parseInt","rowId","setRowId","onClickRow","current","seekTo","datumTypes","count","setCount","originalCountCol","entries","countBy","selectedCount","find","originalSelectedCount","val","lookup","undefined","Error","total","CellRenderer","columnIndex","rowIndex","style","column","toString","format","onClick","passedIndex","setPassedIndex","console","findIndex","onClickFilter","prev","onSelectAllValues","target","indeterminate","valueList","setValueList","onChangeSearchValue","toLowerCase","colToIndex","colIndex","name","getColumnWidth","height","width","rowHeight","fixedColumnCount","fixedRowCount","cellRenderer","styleTopLeftGrid","borderRight","styleBottomLeftGrid","rowCount","Boolean","columnCount","columnWidth","scrollToRow","scrollToAlignment","size","onChange","every","some","LogPlayer","url","setSec","setPlayedSec","controls","onProgress","Math","floor","playedSeconds","progressInterval","ref","App","setLinked","video","setVideo","setStart","playedSec","useRef","onChangeVideo","defaultValue","Option","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95661d92.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { readRemoteFile } from \"react-papaparse\";\n\nfunction flattenObject(ob: any) {\n  var toReturn: any = {};\n\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n\n    if (typeof ob[i] == \"object\" && ob[i] !== null) {\n      var flatObject = flattenObject(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n\n        toReturn[i + \"_\" + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = String(ob[i]);\n    }\n  }\n  return toReturn;\n}\n\nconst getlogRows = (logRaws: string[][]) =>\n  logRaws.map<{ [index: string]: string }>((log, index) => {\n    const _id = log[0];\n    const datumType = log[1];\n    const timestamp = log[5];\n    const value = log[8]?.replaceAll('\"\"', '\"').replaceAll(': \", ', ': \"\", ');\n    try {\n      return { timestamp, _id, datumType, ...flattenObject(JSON.parse(value)) };\n    } catch (e) {\n      return { timestamp, _id, datumType };\n    }\n  });\n\nconst getColumns = (data: { [index: string]: string }[]) => {\n  return data.reduce<string[]>((acc, row) => {\n    const keys = Object.keys(row);\n    return _.union(acc, keys);\n  }, []);\n};\n\nfunction useLogRows(fileName: string) {\n  const [logData, setLogData] = useState<{ [index: string]: string }[]>([]);\n  const logColumns = useMemo(() => getColumns(logData), [logData]);\n  useEffect(() => {\n    async function getLogs() {\n      readRemoteFile<string[]>(\n        `${\n          process.env.NODE_ENV === \"development\"\n            ? \"http://localhost:3000/abc-analyzer\"\n            : \"https://wooogler.github.io/abc-analyzer\"\n        }/logs/${fileName}`,\n        {\n          worker: true,\n          complete: function (results) {\n            const logColumns = [\n              \"timestamp\",\n              \"datumType\",\n              \"type\",\n              \"name\",\n              \"packageName\",\n              \"currentKey\",\n              \"timeTaken\",\n              \"isPosted\",\n              \"messageBox\",\n              \"presentation\",\n              \"_id\",\n            ];\n            const logRaws = results.data;\n            const logRows = getlogRows(logRaws).map((item) =>\n              _.pick(item, logColumns)\n            );\n            // const logColumns = logRows.reduce<string[]>((acc, row) => {\n            //   const keys = Object.keys(row);\n            //   return _.union(acc, keys);\n            // }, []);\n\n            const res = logColumns.reduce((ac, a) => ({ ...ac, [a]: \"\" }), {});\n            const logs = logRows.map((item) => Object.assign({}, res, item));\n            setLogData(logs);\n          },\n          download: true,\n        }\n      );\n    }\n    getLogs();\n  }, [fileName]);\n\n  return { logData, logColumns };\n}\n\nexport default useLogRows;\n","import { Tree } from \"antd\";\nimport { DataNode } from \"antd/lib/tree\";\nimport _ from \"lodash\";\nimport React, { ReactElement, useCallback } from \"react\";\n\ninterface Props {\n  originalLogColumns: string[];\n  setShowColumnIndex: React.Dispatch<React.SetStateAction<boolean[]>>;\n  setShowRowIndex: React.Dispatch<React.SetStateAction<boolean[]>>;\n  setCol: React.Dispatch<React.SetStateAction<string>>;\n  setDatumTypes: React.Dispatch<React.SetStateAction<string[]>>;\n  logData: {\n    [index: string]: string;\n  }[];\n}\n\nexport const defaultDatumTypes = [\n  \"APP_USAGE_EVENT\",\n  \"KEY_LOG\",\n  \"NOTIFICATION\",\n  \"MESSAGE\",\n  \"CALL_LOG\",\n  \"MEDIA\",\n];\n\nconst columnData: DataNode[] = [\n  {\n    title: \"APP_USAGE_EVENT\",\n    key: \"APP_USAGE_EVENT\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"app-name\" },\n      { title: \"packageName\", key: \"app-packageName\" },\n      { title: \"type\", key: \"app-type\" },\n    ],\n  },\n  {\n    title: \"KEY_LOG\",\n    key: \"KEY_LOG\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"key-name\" },\n      { title: \"packageName\", key: \"key-packageName\" },\n      { title: \"currentKey\", key: \"key-currentKey\" },\n      { title: \"timeTaken\", key: \"key-timeTaken\" },\n    ],\n  },\n  {\n    title: \"NOTIFICATION\",\n    key: \"NOTIFICATION\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"noti-name\" },\n      { title: \"packageName\", key: \"noti-packageName\" },\n      { title: \"isPosted\", key: \"noti-isPosted\" },\n    ],\n  },\n  {\n    title: \"MESSAGE\",\n    key: \"MESSAGE\",\n    selectable: false,\n    children: [{ title: \"messageBox\", key: \"msg-messageBox\" }],\n  },\n  {\n    title: \"CALL_LOG\",\n    key: \"CALL_LOG\",\n    selectable: false,\n    children: [\n      { title: \"type\", key: \"call-type\" },\n      { title: \"presentation\", key: \"call-presentation\" },\n    ],\n  },\n  {\n    title: \"MEDIA\",\n    key: \"MEDIA\",\n    selectable: false,\n  },\n];\n\nfunction ShowColumns({\n  originalLogColumns,\n  setShowColumnIndex,\n  setShowRowIndex,\n  setCol,\n  setDatumTypes,\n  logData,\n}: Props): ReactElement {\n  const onCheckColumn = useCallback(\n    (checked, item) => {\n      const allChecked: string[] = [...checked, ...item.halfCheckedKeys];\n      const columns: string[] = [\n        \"timestamp\",\n        \"_id\",\n        \"datumType\",\n        ..._.uniq<string>(\n          allChecked\n            .filter((col: string) => col.includes(\"-\"))\n            .map((col: string) => col.split(\"-\")[1])\n        ),\n      ];\n      setShowRowIndex(logData.map((row) => allChecked.includes(row.datumType)));\n      setShowColumnIndex(\n        originalLogColumns.map((col) => columns.includes(col))\n      );\n      setDatumTypes(\n        allChecked.filter((col: string) => defaultDatumTypes.includes(col))\n      );\n    },\n    [\n      logData,\n      originalLogColumns,\n      setDatumTypes,\n      setShowColumnIndex,\n      setShowRowIndex,\n    ]\n  );\n  const onSelectColumn = useCallback(\n    (selected) => {\n      if (selected.length === 0) {\n        setCol(\"\");\n      } else {\n        setCol(selected[0].split(\"-\")[1]);\n      }\n    },\n    [setCol]\n  );\n  return (\n    <div className=\"h-52 overflow-auto\">\n      <Tree\n        checkable\n        treeData={columnData}\n        onCheck={onCheckColumn}\n        onSelect={onSelectColumn}\n        defaultCheckedKeys={defaultDatumTypes}\n      />\n    </div>\n  );\n}\n\nexport default ShowColumns;\n","import _ from \"lodash\";\nimport { ReactElement, useState } from \"react\";\nimport SpreadSheet from \"react-spreadsheet\";\nimport \"./TaskSheet.css\";\n\ninterface Props {\n  datumType: string;\n  timestamp: string;\n}\n\nconst genInit = (i: number) => [\n  [\n    {\n      value: `Trial ${i}`,\n      className: \"font-bold text-red-500\",\n    },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n  ],\n  [\n    {\n      value: `Trial ${i}-1 (Message)`,\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    { value: \"Timestamp\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"alphabet\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"Timetaken\", className: \"bg-gray-100 text-black\", readOnly: true },\n  ],\n  [\n    { value: \"Place\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, readOnly: true },\n  ],\n  [\n    { value: \"Time\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, readOnly: true },\n  ],\n  [\n    { value: \"Date\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, readOnly: true },\n  ],\n  [\n    { value: \"Time Interval ('o', 'n')\", readOnly: true },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    {\n      value: `Trial ${i}-2 (Camera)`,\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    {\n      value: \"# Transition (Camera)\",\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    {\n      value: null,\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    { value: null, className: \"bg-gray-100 text-black\", readOnly: true },\n  ],\n  [\n    { value: \"# of app transition\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n  ],\n  [\n    {\n      value: `Trial ${i}-3 (Google Maps)`,\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    { value: \"DatumType\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"Event\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"timestamp\", className: \"bg-gray-100 text-black\", readOnly: true },\n  ],\n  [\n    { value: \"Noti to search place\", readOnly: true },\n    { value: \"NOTIFICATION\", readOnly: true },\n    { value: \"isPosted: True\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    { value: \"Share route with message\", readOnly: true },\n    { value: \"APP_USAGE_EVENT\", readOnly: true },\n    { value: \"ACTIVITY_RESUMED\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    {\n      value: `Go to Next Video`,\n      className: \"font-bold text-black\",\n    },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n    { value: null, readOnly: true },\n  ],\n  [\n    { value: \"Noti to search place\", readOnly: true },\n    { value: \"NOTIFICATION\", readOnly: true },\n    { value: \"isPosted: False\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    { value: \"Share route with message\", readOnly: true },\n    { value: \"APP_USAGE_EVENT\", readOnly: true },\n    { value: \"ACTIVITY_STOPPED\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    {\n      value: `Trial ${i}-4 (Woori bank)`,\n      className: \"bg-gray-100 text-black\",\n      readOnly: true,\n    },\n    { value: \"DatumType\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"Event\", className: \"bg-gray-100 text-black\", readOnly: true },\n    { value: \"timestamp\", className: \"bg-gray-100 text-black\", readOnly: true },\n  ],\n  [\n    { value: \"Start using banking app\", readOnly: true },\n    { value: \"APP_USAGE_EVENT\", readOnly: true },\n    { value: \"ACTIVITY_RESUMED\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n  [\n    { value: \"End using banking app\", readOnly: true },\n    { value: \"APP_USAGE_EVENT\", readOnly: true },\n    { value: \"ACTIVITY_STOPPED\", readOnly: true },\n    { value: null, className: \"bg-blue-100\" },\n  ],\n];\n\nconst initTaskData = _.range(1, 7).reduce<any>((acc, i) => {\n  return [...acc, ...genInit(i)];\n}, []);\n\nfunction TaskSheet({ datumType, timestamp }: Props): ReactElement {\n  // const [rowIndex, setRowIndex] = useState<number>(0);\n\n  const [taskData, setTaskData] = useState<any>(initTaskData);\n  const onClickCopy = () => {\n    // setTaskData((prev) => {\n    //   return prev?.map((row, index) => {\n    //     if (index === rowIndex) {\n    //       return [row[0], { value: datumType }, row[2], { value: timestamp }];\n    //     }\n    //     return row;\n    //   });\n    // });\n    setTaskData(initTaskData);\n  };\n  // const onSelectCell = (selected: Point[]) => {\n  //   if (selected !== [] && selected[0]) {\n  //     setRowIndex(selected[0].row);\n  //   }\n  // };\n\n  return (\n    <>\n      {/* <div className=\"flex\">\n        <div className=\"text-lg font-bold\">Task Sheet</div>\n        <Button className=\"ml-auto\" onClick={onClickCopy} size=\"small\">\n          Reset sheet\n        </Button>\n      </div> */}\n      <div className=\"h-60 overflow-auto\">\n        <SpreadSheet\n          data={taskData}\n          // onSelect={onSelectCell}\n          hideRowIndicators={true}\n          hideColumnIndicators={true}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default TaskSheet;\n","import React, { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport {\n  AutoSizer,\n  GridCellRenderer,\n  Index,\n  MultiGrid,\n} from \"react-virtualized\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport useLogRows from \"../hooks/useLogRows\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { Checkbox, Input } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport ShowColumns, { defaultDatumTypes } from \"./ShowColumns\";\nimport TaskSheet from \"./TaskSheet\";\n\ninterface Props {\n  fileName: string;\n  sec: number;\n  sync: number;\n  start: number;\n  selectedTimestamp: number;\n  setSync: React.Dispatch<React.SetStateAction<number>>;\n  setSelectedTimestamp: React.Dispatch<React.SetStateAction<number>>;\n  playerRef: any | undefined;\n  linked: boolean;\n}\n\ninterface ValueCount {\n  value: string;\n  count: number;\n  checked: boolean;\n  total: number;\n}\n\ndayjs.extend(localizedFormat);\n\nfunction LogTable({\n  fileName,\n  sec,\n  sync,\n  start,\n  setSync,\n  setSelectedTimestamp,\n  selectedTimestamp,\n  playerRef,\n  linked,\n}: Props): ReactElement {\n  const [selectedDatumType, setSelectedDatumType] = useState<string>(\"\");\n  const { logData, logColumns: originalLogColumns } = useLogRows(fileName);\n  const [logState, setLogState] = useState<\n    {\n      [index: string]: string;\n    }[]\n  >();\n  const [showColumnIndex, setShowColumnIndex] = useState<boolean[]>([]);\n  const [showRowIndex, setShowRowIndex] = useState<boolean[]>([]);\n  useEffect(() => {\n    const initShowColumnIndex = new Array(originalLogColumns.length).fill(true);\n    // .map((_, index) => (index === 1 ? false : true));\n    setShowColumnIndex(initShowColumnIndex);\n    setShowRowIndex(\n      logData.map((item) => defaultDatumTypes.includes(item.datumType))\n    );\n  }, [logData, originalLogColumns.length]);\n  useEffect(() => {\n    const showColumns = originalLogColumns.filter((_, i) => showColumnIndex[i]);\n    setLogState(\n      logData\n        .map((item) => _.pick(item, showColumns))\n        .filter((_, i) => showRowIndex[i])\n        .sort((a, b) => parseInt(a.timestamp) - parseInt(b.timestamp))\n    );\n  }, [logData, originalLogColumns, showColumnIndex, showRowIndex]);\n\n  const [rowId, setRowId] = useState(\"\");\n\n  const onClickRow = useCallback(\n    (row: { [index: string]: string }) => {\n      setRowId(row?._id);\n      const timestamp = parseInt(row?.timestamp);\n      setSelectedTimestamp(parseInt(row?.timestamp));\n      setSelectedDatumType(row?.datumType);\n      if (playerRef) {\n        playerRef.current.seekTo((start + timestamp - sync) / 1000, \"seconds\");\n      }\n    },\n    [playerRef, setSelectedTimestamp, start, sync]\n  );\n\n  const [col, setCol] = useState(\"\");\n  const [datumTypes, setDatumTypes] = useState<string[]>(defaultDatumTypes);\n  const [count, setCount] = useState<ValueCount[] | undefined>([]);\n\n  useEffect(() => {\n    const logs = logData.filter((log) => datumTypes.includes(log.datumType));\n    const originalCountCol = originalLogColumns.map((col) => ({\n      col,\n      count: Object.entries(_.countBy(logs?.map((item) => item[col]))),\n    }));\n    const countCol = originalLogColumns.map((col) => ({\n      col,\n      count: Object.entries(_.countBy(logState?.map((item) => item[col]))),\n    }));\n    const selectedCount = countCol.find((item) => item.col === col)?.count;\n    const originalSelectedCount = originalCountCol.find(\n      (item) => item.col === col\n    )?.count;\n\n    setCount(\n      originalSelectedCount?.map((item) => {\n        if (selectedCount?.map((val) => val[0]).includes(item[0])) {\n          const lookup = selectedCount.find((val) => val[0] === item[0]);\n          if (lookup === undefined) {\n            throw new Error(\"no lookup\");\n          }\n          const count = lookup[1];\n          if (count === item[1]) {\n            return {\n              value: item[0],\n              count: count,\n              checked: true,\n              total: item[1],\n            };\n          }\n          return {\n            value: item[0],\n            count: count,\n            checked: false,\n            total: item[1],\n          };\n        } else {\n          return { value: item[0], count: 0, checked: false, total: item[1] };\n        }\n      })\n    );\n  }, [col, datumTypes, logData, logState, originalLogColumns]);\n\n  const CellRenderer: GridCellRenderer = ({\n    columnIndex,\n    key,\n    rowIndex,\n    style,\n  }) => {\n    if (logState) {\n      const logColumns = originalLogColumns.filter(\n        (_, index) => showColumnIndex[index]\n      );\n      const column = logColumns[columnIndex];\n      const row = logState[rowIndex];\n      if (rowIndex === 0) {\n        return (\n          <CustomCol key={key} style={style} className=\"cell\">\n            {columnIndex === 0 ? \"Datetime\" : column}\n          </CustomCol>\n        );\n      }\n\n      const value =\n        columnIndex !== 0\n          ? row && row[column] && row[column].toString()\n          : row && dayjs(parseInt(row[column])).format(\"MM/DD hh:mm:ss.SSS\");\n\n      return (\n        <CustomRow\n          key={key}\n          style={style}\n          className=\"cell\"\n          passed={\n            linked ? sec + sync - start >= parseInt(row?.timestamp) : false\n          }\n          selected={row?._id === rowId}\n          onClick={() => onClickRow(row)}\n        >\n          {value}\n          {/* <Tooltip title={value}>{value}</Tooltip> */}\n        </CustomRow>\n      );\n    }\n  };\n  const [passedIndex, setPassedIndex] = useState(0);\n\n  useEffect(() => {\n    console.log(passedIndex);\n  }, [passedIndex]);\n  useEffect(() => {\n    const rowIndex = logState\n      ? logState.findIndex(\n          (item) => sec + sync - start <= parseInt(item?.timestamp)\n        )\n      : 0;\n    const row = logState?.find(\n      (item) => sec + sync - start <= parseInt(item?.timestamp)\n    );\n    setPassedIndex(rowIndex);\n\n    // if (playerRef && row) {\n    //   const timestamp = parseInt(row?.timestamp);\n    //   playerRef.current.seekTo((start + timestamp - sync) / 1000, \"seconds\");\n    // }\n    if (row && row._id) {\n      setRowId(row._id);\n    }\n  }, [logState, playerRef, sec, start, sync]);\n\n  const onClickFilter = useCallback(\n    (value: string, checked: boolean) => {\n      if (checked) {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (item === true && datumTypes.includes(logData[i].datumType)) {\n              return logData[i][col] !== value;\n            } else {\n              return item;\n            }\n          })\n        );\n      } else {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (item === false && datumTypes.includes(logData[i].datumType)) {\n              return logData[i][col] === value;\n            } else {\n              return item;\n            }\n          })\n        );\n      }\n    },\n    [col, datumTypes, logData]\n  );\n\n  const onSelectAllValues = useCallback(\n    (e: CheckboxChangeEvent) => {\n      if (!e.target.checked || e.target.indeterminate) {\n        setShowRowIndex((prev) => prev.map(() => false));\n      } else {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (datumTypes.includes(logData[i].datumType)) {\n              return true;\n            }\n            return item;\n          })\n        );\n      }\n    },\n    [datumTypes, logData]\n  );\n\n  const [valueList, setValueList] = useState<ValueCount[] | undefined>([]);\n\n  useEffect(() => {\n    setValueList(count);\n  }, [count, originalLogColumns]);\n\n  const onChangeSearchValue: React.ChangeEventHandler<HTMLInputElement> =\n    useCallback(\n      (e) => {\n        setValueList(\n          count?.filter((item) =>\n            item.value.toLowerCase().includes(e.target.value.toLowerCase())\n          )\n        );\n      },\n      [count]\n    );\n\n  const colToIndex = (col: string) => {\n    const colIndex = originalLogColumns\n      .map((item, i) => ({ name: item, index: i }))\n      .filter((item) => showColumnIndex[item.index]);\n    return colIndex?.find((item) => item.name === col)?.index;\n  };\n  const getColumnWidth: (params: Index) => number = ({ index }) => {\n    if (index === 0) {\n      return 150;\n    } else if (index === colToIndex(\"datumType\")) {\n      return 150;\n    } else if (index === colToIndex(\"type\")) {\n      return 250;\n    } else if (index === colToIndex(\"name\")) {\n      return 100;\n    } else if (index === colToIndex(\"packageName\")) {\n      return 300;\n    } else if (index === colToIndex(\"_id\")) {\n      return 0;\n    }\n    return 70;\n  };\n\n  return (\n    <div className=\"w-full h-screen\">\n      {/* <div>\n        sec:{sec}, sync: {sync}, timestamp: {selectedTimestamp}, start: {start},\n        sec+sync: {sec + sync}\n      </div> */}\n      <Styles>\n        <AutoSizer>\n          {({ height, width }) => (\n            <MultiGrid\n              height={height}\n              rowHeight={30}\n              width={width}\n              fixedColumnCount={1}\n              fixedRowCount={1}\n              cellRenderer={CellRenderer}\n              styleTopLeftGrid={{\n                borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n              }}\n              styleBottomLeftGrid={{\n                borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n              }}\n              rowCount={showRowIndex.filter(Boolean).length}\n              columnCount={showColumnIndex.filter(Boolean).length}\n              columnWidth={getColumnWidth}\n              scrollToRow={passedIndex}\n              scrollToAlignment=\"center\"\n            />\n          )}\n        </AutoSizer>\n      </Styles>\n      <div className=\"flex\">\n        <div className=\"flex flex-col ml-4\">\n          <div className=\"text-lg font-bold\">Show Columns</div>\n          <ShowColumns\n            originalLogColumns={originalLogColumns}\n            setShowColumnIndex={setShowColumnIndex}\n            setCol={setCol}\n            logData={logData}\n            setDatumTypes={setDatumTypes}\n            setShowRowIndex={setShowRowIndex}\n          />\n        </div>\n        {(col !== \"\" || valueList?.length === 0) && (\n          <div className=\"flex flex-col ml-4\">\n            <div className=\"text-lg font-bold\">Column Filter - {col}</div>\n            <Input size=\"small\" onChange={onChangeSearchValue} />\n            <div className=\"p-1\">\n              <Checkbox\n                checked={count\n                  ?.map((item) => item.checked)\n                  .every((item) => item === true)}\n                indeterminate={\n                  !count\n                    ?.map((item) => item.checked)\n                    .every((item) => item === true) &&\n                  count\n                    ?.map((item) => item.checked)\n                    .some((item) => item === true)\n                }\n                onChange={onSelectAllValues}\n              >\n                Select All\n              </Checkbox>\n            </div>\n            <div className=\"h-40 overflow-auto\">\n              {valueList\n                ?.sort((a, b) => b.total - a.total)\n                .map((item, index) => {\n                  return (\n                    <div className=\"p-1\" key={index}>\n                      <Checkbox\n                        checked={item.checked}\n                        indeterminate={item.count !== 0 && !item.checked}\n                        onClick={() => onClickFilter(item.value, item.checked)}\n                      >\n                        {item.value} ({item.count}/{item.total})\n                      </Checkbox>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n        <div className=\"ml-auto\">\n          <TaskSheet\n            timestamp={selectedTimestamp.toString()}\n            datumType={selectedDatumType}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Styles = styled.div`\n  width: 100%;\n  height: 70%;\n  margin: 1rem;\n\n  .cell {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst CustomRow = styled.div<{ passed: boolean; selected: boolean }>`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  padding-left: 0.25rem;\n  line-height: 30px;\n  ${({ passed }) =>\n    passed &&\n    `\n    background-color: #bdbdbd;\n  `}\n  ${({ selected }) =>\n    selected &&\n    `\n    background-color: #000000;\n    color: white;\n  `}\n`;\n\nconst CustomCol = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  padding-left: 0.25rem;\n  background-color: #fafafa;\n  line-height: 30px;\n`;\n\nexport default LogTable;\n","import React, { ReactElement } from \"react\";\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  url: string;\n  setSec: React.Dispatch<React.SetStateAction<number>>;\n  setSync: React.Dispatch<React.SetStateAction<number>>;\n  setStart: React.Dispatch<React.SetStateAction<number>>;\n  selectedTimestamp: number;\n  playerRef: React.LegacyRef<ReactPlayer> | undefined;\n  setPlayedSec: React.Dispatch<React.SetStateAction<number>>;\n  playedSec: number;\n}\n\ninterface Progress {\n  played: number;\n  playedSeconds: number;\n  loaded: number;\n  loadedSeconds: number;\n}\n\nfunction LogPlayer({\n  url,\n  setSec,\n  setPlayedSec,\n  playerRef,\n}: Props): ReactElement {\n  const onProgress = (e: Progress) => {\n    setSec(Math.floor(e.playedSeconds * 1000));\n    setPlayedSec(Math.floor(e.playedSeconds * 1000));\n  };\n\n  return (\n    <div className=\"flex flex-col h-full w-full pl-4 pt-2 pb-14 justify-center items-center\">\n      <ReactPlayer\n        url={url}\n        controls={true}\n        width=\"100%\"\n        height=\"100%\"\n        onProgress={onProgress}\n        progressInterval={10}\n        ref={playerRef}\n      />\n    </div>\n  );\n}\n\nexport default LogPlayer;\n","import React, { useCallback, useRef, useState } from \"react\";\n\nimport LogTable from \"./components/LogTable\";\nimport \"antd/dist/antd.css\";\nimport LogPlayer from \"./components/LogPlayer\";\nimport ReactPlayer from \"react-player\";\nimport { Button, Radio, Select, Switch } from \"antd\";\n\nfunction App() {\n  const [linked, setLinked] = useState<boolean>(true);\n  const [video, setVideo] = useState<string>(\"\");\n  const [sync, setSync] = useState<number>(0);\n  const [sec, setSec] = useState<number>(0);\n  const [start, setStart] = useState<number>(0);\n  const [playedSec, setPlayedSec] = useState(0);\n  const [selectedTimestamp, setSelectedTimestamp] = useState<number>(0);\n  const playerRef = useRef() as React.LegacyRef<ReactPlayer> | undefined;\n\n  const onClickSync = useCallback(() => {\n    setSync(selectedTimestamp);\n    setStart(playedSec);\n  }, [playedSec, selectedTimestamp, setStart, setSync]);\n\n  const onChangeVideo = useCallback(\n    (value: string) => {\n      setVideo(value);\n      if (linked) {\n        if (value === \"1\") {\n          setStart(63313);\n          setSync(1629888667514);\n        } else if (value === \"2\") {\n          setStart(49722);\n          setSync(1629889358549);\n        } else if (value === \"3\") {\n          setStart(55914);\n          setSync(1629890037158);\n        } else if (value === \"4\") {\n          setStart(55547);\n          setSync(1629890830082);\n        } else if (value === \"5\") {\n          setStart(84034);\n          setSync(1629891653325);\n        } else if (value === \"6\") {\n          setStart(46918);\n          setSync(1629892242627);\n        } else if (value === \"7\") {\n          setStart(49363);\n          setSync(1629895489933);\n        } else if (value === \"8\") {\n          setStart(47416);\n          setSync(1629896452951);\n        } else if (value === \"9\") {\n          setStart(51487);\n          setSync(1629897703366);\n        } else if (value === \"10\") {\n          setStart(51047);\n          setSync(1629903331680);\n        } else if (value === \"11\") {\n          setStart(53512);\n          setSync(1629904437562);\n        } else if (value === \"12\") {\n          setStart(51414);\n          setSync(1629905062038);\n        }\n      }\n    },\n    [linked]\n  );\n\n  return (\n    <div className=\"flex h-screen overflow-hidden\">\n      <div className=\"w-3/4 h-screen\">\n        <LogTable\n          fileName=\"P023.csv\"\n          sec={linked ? sec : 0}\n          sync={sync}\n          setSelectedTimestamp={setSelectedTimestamp}\n          playerRef={linked && playerRef}\n          setSync={setSync}\n          selectedTimestamp={selectedTimestamp}\n          start={start}\n          linked={linked}\n        />\n      </div>\n      <div className=\"flex flex-col w-1/4 h-screen items-center\">\n        <div className=\"flex justify-center h-8 items-center pt-2\">\n          <div className=\"mr-2\">Link:</div>\n          <Switch checked={linked} onChange={(checked) => setLinked(checked)} />\n          <div className=\"mx-2\"></div>\n          <Select\n            defaultValue=\"10\"\n            size=\"small\"\n            onChange={onChangeVideo}\n            value={video}\n            className=\"w-48\"\n          >\n            <Select.Option value=\"10\">Practice-Trial 1-Prev</Select.Option>\n            <Select.Option value=\"4\">Practice-Trial 1-Next</Select.Option>\n            <Select.Option value=\"5\">Practice-Trial 2-Prev</Select.Option>\n            <Select.Option value=\"11\">Practice-Trial 2-Next</Select.Option>\n            <Select.Option value=\"12\">Session 1-Trial 3-Prev</Select.Option>\n            <Select.Option value=\"6\">Session 1-Trial 3-Next</Select.Option>\n            <Select.Option value=\"3\">Session 1-Trial 4-Prev</Select.Option>\n            <Select.Option value=\"9\">Session 1-Trial 4-Next</Select.Option>\n            <Select.Option value=\"7\">Session 2-Trial 5-Prev</Select.Option>\n            <Select.Option value=\"1\">Session 2-Trial 5-Next</Select.Option>\n            <Select.Option value=\"2\">Session 2-Trial 6-Prev</Select.Option>\n            <Select.Option value=\"8\">Session 2-Trial 6-Next</Select.Option>\n          </Select>\n          {/* <div className=\"mx-2\"></div>\n          <Button onClick={onClickSync} size=\"small\">\n            Sync\n          </Button> */}\n        </div>\n        {/* <div>\n          start: {start}, sync: {sync}\n        </div> */}\n        <LogPlayer\n          url={`${\n            process.env.NODE_ENV === \"development\" ? \"abc-analyzer/\" : \"\"\n          }videos/${video}.webm`}\n          setSec={setSec}\n          setSync={setSync}\n          setStart={setStart}\n          setPlayedSec={setPlayedSec}\n          selectedTimestamp={selectedTimestamp}\n          playerRef={playerRef}\n          playedSec={playedSec}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}