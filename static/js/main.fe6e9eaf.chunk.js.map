{"version":3,"sources":["hooks/useLogRows.ts","components/ShowColumns.tsx","components/TaskSheet.tsx","components/LogTable.tsx","components/LogPlayer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["flattenObject","ob","toReturn","i","hasOwnProperty","flatObject","x","String","getlogRows","logRaws","map","log","index","_id","datumType","timestamp","value","replaceAll","JSON","parse","e","useLogRows","fileName","useState","logData","setLogData","logColumns","useMemo","reduce","acc","row","keys","Object","_","union","useEffect","a","readRemoteFile","worker","complete","results","data","logRows","item","pick","res","ac","logs","assign","download","getLogs","defaultDatumTypes","columnData","title","key","selectable","children","ShowColumns","originalLogColumns","setShowColumnIndex","setShowRowIndex","setCol","setDatumTypes","onCheckColumn","useCallback","checked","allChecked","halfCheckedKeys","columns","uniq","filter","col","includes","split","onSelectColumn","selected","length","className","checkable","treeData","onCheck","onSelect","defaultCheckedKeys","initTaskData","TaskSheet","taskData","hideRowIndicators","hideColumnIndicators","dayjs","extend","localizedFormat","Styles","styled","div","CustomRow","passed","CustomCol","LogTable","sec","sync","start","setSelectedTimestamp","setSync","selectedTimestamp","playerRef","linked","selectedDatumType","setSelectedDatumType","logState","setLogState","showColumnIndex","showRowIndex","initShowColumnIndex","Array","fill","showColumns","sort","b","parseInt","rowId","setRowId","onClickRow","current","seekTo","datumTypes","count","setCount","originalCountCol","entries","countBy","selectedCount","find","originalSelectedCount","val","lookup","undefined","Error","total","CellRenderer","columnIndex","rowIndex","style","column","toString","format","onClick","passedIndex","setPassedIndex","console","findIndex","onClickFilter","prev","onSelectAllValues","target","indeterminate","valueList","setValueList","onChangeSearchValue","toLowerCase","colToIndex","colIndex","name","getColumnWidth","height","width","rowHeight","fixedColumnCount","fixedRowCount","cellRenderer","styleTopLeftGrid","borderRight","styleBottomLeftGrid","rowCount","Boolean","columnCount","columnWidth","scrollToRow","scrollToAlignment","size","onChange","every","some","LogPlayer","url","setSec","setPlayedSec","controls","onProgress","Math","floor","playedSeconds","progressInterval","ref","App","setLinked","video","setVideo","setStart","playedSec","useRef","onChangeVideo","Group","defaultValue","buttonStyle","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe6e9eaf.chunk.js","sourcesContent":["import _ from \"lodash\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport { readRemoteFile } from \"react-papaparse\";\n\nfunction flattenObject(ob: any) {\n  var toReturn: any = {};\n\n  for (var i in ob) {\n    if (!ob.hasOwnProperty(i)) continue;\n\n    if (typeof ob[i] == \"object\" && ob[i] !== null) {\n      var flatObject = flattenObject(ob[i]);\n      for (var x in flatObject) {\n        if (!flatObject.hasOwnProperty(x)) continue;\n\n        toReturn[i + \"_\" + x] = flatObject[x];\n      }\n    } else {\n      toReturn[i] = String(ob[i]);\n    }\n  }\n  return toReturn;\n}\n\nconst getlogRows = (logRaws: string[][]) =>\n  logRaws.map<{ [index: string]: string }>((log, index) => {\n    const _id = log[0];\n    const datumType = log[1];\n    const timestamp = log[5];\n    const value = log[8]?.replaceAll('\"\"', '\"').replaceAll(': \", ', ': \"\", ');\n    try {\n      return { timestamp, _id, datumType, ...flattenObject(JSON.parse(value)) };\n    } catch (e) {\n      return { timestamp, _id, datumType };\n    }\n  });\n\nconst getColumns = (data: { [index: string]: string }[]) => {\n  return data.reduce<string[]>((acc, row) => {\n    const keys = Object.keys(row);\n    return _.union(acc, keys);\n  }, []);\n};\n\nfunction useLogRows(fileName: string) {\n  const [logData, setLogData] = useState<{ [index: string]: string }[]>([]);\n  const logColumns = useMemo(() => getColumns(logData), [logData]);\n  useEffect(() => {\n    async function getLogs() {\n      readRemoteFile<string[]>(\n        `${\n          process.env.NODE_ENV === \"development\"\n            ? \"http://localhost:3000/abc-analyzer\"\n            : \"https://wooogler.github.io/abc-analyzer\"\n        }/logs/${fileName}`,\n        {\n          worker: true,\n          complete: function (results) {\n            const logColumns = [\n              \"timestamp\",\n              \"datumType\",\n              \"type\",\n              \"name\",\n              \"packageName\",\n              \"currentKey\",\n              \"timeTaken\",\n              \"isPosted\",\n              \"messageBox\",\n              \"presentation\",\n              \"_id\",\n            ];\n            const logRaws = results.data;\n            const logRows = getlogRows(logRaws).map((item) =>\n              _.pick(item, logColumns)\n            );\n            // const logColumns = logRows.reduce<string[]>((acc, row) => {\n            //   const keys = Object.keys(row);\n            //   return _.union(acc, keys);\n            // }, []);\n\n            const res = logColumns.reduce((ac, a) => ({ ...ac, [a]: \"\" }), {});\n            const logs = logRows.map((item) => Object.assign({}, res, item));\n            setLogData(logs);\n          },\n          download: true,\n        }\n      );\n    }\n    getLogs();\n  }, [fileName]);\n\n  return { logData, logColumns };\n}\n\nexport default useLogRows;\n","import { Tree } from \"antd\";\nimport { DataNode } from \"antd/lib/tree\";\nimport _ from \"lodash\";\nimport React, { ReactElement, useCallback } from \"react\";\n\ninterface Props {\n  originalLogColumns: string[];\n  setShowColumnIndex: React.Dispatch<React.SetStateAction<boolean[]>>;\n  setShowRowIndex: React.Dispatch<React.SetStateAction<boolean[]>>;\n  setCol: React.Dispatch<React.SetStateAction<string>>;\n  setDatumTypes: React.Dispatch<React.SetStateAction<string[]>>;\n  logData: {\n    [index: string]: string;\n  }[];\n}\n\nexport const defaultDatumTypes = [\n  \"APP_USAGE_EVENT\",\n  \"KEY_LOG\",\n  \"NOTIFICATION\",\n  \"MESSAGE\",\n  \"CALL_LOG\",\n  \"MEDIA\",\n];\n\nconst columnData: DataNode[] = [\n  {\n    title: \"APP_USAGE_EVENT\",\n    key: \"APP_USAGE_EVENT\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"app-name\" },\n      { title: \"packageName\", key: \"app-packageName\" },\n      { title: \"type\", key: \"app-type\" },\n    ],\n  },\n  {\n    title: \"KEY_LOG\",\n    key: \"KEY_LOG\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"key-name\" },\n      { title: \"packageName\", key: \"key-packageName\" },\n      { title: \"currentKey\", key: \"key-currentKey\" },\n      { title: \"timeTaken\", key: \"key-timeTaken\" },\n    ],\n  },\n  {\n    title: \"NOTIFICATION\",\n    key: \"NOTIFICATION\",\n    selectable: false,\n    children: [\n      { title: \"name\", key: \"noti-name\" },\n      { title: \"packageName\", key: \"noti-packageName\" },\n      { title: \"isPosted\", key: \"noti-isPosted\" },\n    ],\n  },\n  {\n    title: \"MESSAGE\",\n    key: \"MESSAGE\",\n    selectable: false,\n    children: [{ title: \"messageBox\", key: \"msg-messageBox\" }],\n  },\n  {\n    title: \"CALL_LOG\",\n    key: \"CALL_LOG\",\n    selectable: false,\n    children: [\n      { title: \"type\", key: \"call-type\" },\n      { title: \"presentation\", key: \"call-presentation\" },\n    ],\n  },\n  {\n    title: \"MEDIA\",\n    key: \"MEDIA\",\n    selectable: false,\n  },\n];\n\nfunction ShowColumns({\n  originalLogColumns,\n  setShowColumnIndex,\n  setShowRowIndex,\n  setCol,\n  setDatumTypes,\n  logData,\n}: Props): ReactElement {\n  const onCheckColumn = useCallback(\n    (checked, item) => {\n      const allChecked: string[] = [...checked, ...item.halfCheckedKeys];\n      const columns: string[] = [\n        \"timestamp\",\n        \"_id\",\n        \"datumType\",\n        ..._.uniq<string>(\n          allChecked\n            .filter((col: string) => col.includes(\"-\"))\n            .map((col: string) => col.split(\"-\")[1])\n        ),\n      ];\n      setShowRowIndex(logData.map((row) => allChecked.includes(row.datumType)));\n      setShowColumnIndex(\n        originalLogColumns.map((col) => columns.includes(col))\n      );\n      setDatumTypes(\n        allChecked.filter((col: string) => defaultDatumTypes.includes(col))\n      );\n    },\n    [\n      logData,\n      originalLogColumns,\n      setDatumTypes,\n      setShowColumnIndex,\n      setShowRowIndex,\n    ]\n  );\n  const onSelectColumn = useCallback(\n    (selected) => {\n      if (selected.length === 0) {\n        setCol(\"\");\n      } else {\n        setCol(selected[0].split(\"-\")[1]);\n      }\n    },\n    [setCol]\n  );\n  return (\n    <div className=\"h-52 overflow-auto\">\n      <Tree\n        checkable\n        treeData={columnData}\n        onCheck={onCheckColumn}\n        onSelect={onSelectColumn}\n        defaultCheckedKeys={defaultDatumTypes}\n      />\n    </div>\n  );\n}\n\nexport default ShowColumns;\n","/* eslint-disable no-sequences */\nimport { Button } from \"antd\";\nimport _ from \"lodash\";\nimport React, { ReactElement, useState } from \"react\";\nimport SpreadSheet, { Matrix } from \"react-spreadsheet\";\n\ninterface Props {\n  datumType: string;\n  timestamp: string;\n}\n\nconst initTaskData = [\n  [\n    { value: \"Task (Trial 1)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n  [\n    { value: \"Task (Trial 2)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n  [\n    { value: \"Task (Trial 3)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n  [\n    { value: \"Task (Trial 4)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n  [\n    { value: \"Task (Trial 5)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n  [\n    { value: \"Task (Trial 6)\" },\n    { value: \"DatumType\" },\n    { value: \"Event\" },\n    { value: \"timestamp\" },\n  ],\n  [\n    { value: \"첫번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"두번째 문자 공유\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 시작\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_RESUMED\" },\n    { value: null },\n  ],\n  [\n    { value: \"은행 앱 사용 종료\" },\n    { value: \"APP_USAGE_EVENT\" },\n    { value: \"ACTIVITY_STOPPED\" },\n    { value: null },\n  ],\n];\n\nfunction TaskSheet({ datumType, timestamp }: Props): ReactElement {\n  // const [rowIndex, setRowIndex] = useState<number>(0);\n\n  const [taskData, setTaskData] =\n    useState<Matrix<{ value: string | null }>>(initTaskData);\n  const onClickCopy = () => {\n    // setTaskData((prev) => {\n    //   return prev?.map((row, index) => {\n    //     if (index === rowIndex) {\n    //       return [row[0], { value: datumType }, row[2], { value: timestamp }];\n    //     }\n    //     return row;\n    //   });\n    // });\n    setTaskData(initTaskData);\n  };\n  // const onSelectCell = (selected: Point[]) => {\n  //   if (selected !== [] && selected[0]) {\n  //     setRowIndex(selected[0].row);\n  //   }\n  // };\n\n  return (\n    <>\n      <div className=\"flex\">\n        <div className=\"text-lg font-bold\">Task Sheet</div>\n        {/* <Button className=\"ml-auto\" onClick={onClickCopy} size=\"small\">\n          Reset sheet\n        </Button> */}\n      </div>\n      <div className=\"h-60 overflow-auto\">\n        <SpreadSheet\n          data={taskData}\n          // onSelect={onSelectCell}\n          hideRowIndicators={true}\n          hideColumnIndicators={true}\n        />\n      </div>\n    </>\n  );\n}\n\nexport default TaskSheet;\n","import React, { ReactElement, useCallback, useEffect, useState } from \"react\";\nimport {\n  AutoSizer,\n  GridCellRenderer,\n  Index,\n  MultiGrid,\n} from \"react-virtualized\";\nimport dayjs from \"dayjs\";\nimport localizedFormat from \"dayjs/plugin/localizedFormat\";\nimport useLogRows from \"../hooks/useLogRows\";\nimport styled from \"styled-components\";\nimport _ from \"lodash\";\nimport { Checkbox, Input } from \"antd\";\nimport { CheckboxChangeEvent } from \"antd/lib/checkbox\";\nimport ShowColumns, { defaultDatumTypes } from \"./ShowColumns\";\nimport TaskSheet from \"./TaskSheet\";\n\ninterface Props {\n  fileName: string;\n  sec: number;\n  sync: number;\n  start: number;\n  selectedTimestamp: number;\n  setSync: React.Dispatch<React.SetStateAction<number>>;\n  setSelectedTimestamp: React.Dispatch<React.SetStateAction<number>>;\n  playerRef: any | undefined;\n  linked: boolean;\n}\n\ninterface ValueCount {\n  value: string;\n  count: number;\n  checked: boolean;\n  total: number;\n}\n\ndayjs.extend(localizedFormat);\n\nfunction LogTable({\n  fileName,\n  sec,\n  sync,\n  start,\n  setSync,\n  setSelectedTimestamp,\n  selectedTimestamp,\n  playerRef,\n  linked,\n}: Props): ReactElement {\n  const [selectedDatumType, setSelectedDatumType] = useState<string>(\"\");\n  const { logData, logColumns: originalLogColumns } = useLogRows(fileName);\n  const [logState, setLogState] = useState<\n    {\n      [index: string]: string;\n    }[]\n  >();\n  const [showColumnIndex, setShowColumnIndex] = useState<boolean[]>([]);\n  const [showRowIndex, setShowRowIndex] = useState<boolean[]>([]);\n  useEffect(() => {\n    const initShowColumnIndex = new Array(originalLogColumns.length).fill(true);\n    // .map((_, index) => (index === 1 ? false : true));\n    setShowColumnIndex(initShowColumnIndex);\n    setShowRowIndex(\n      logData.map((item) => defaultDatumTypes.includes(item.datumType))\n    );\n  }, [logData, originalLogColumns.length]);\n  useEffect(() => {\n    const showColumns = originalLogColumns.filter((_, i) => showColumnIndex[i]);\n    setLogState(\n      logData\n        .map((item) => _.pick(item, showColumns))\n        .filter((_, i) => showRowIndex[i])\n        .sort((a, b) => parseInt(a.timestamp) - parseInt(b.timestamp))\n    );\n  }, [logData, originalLogColumns, showColumnIndex, showRowIndex]);\n\n  const [rowId, setRowId] = useState(\"\");\n\n  const onClickRow = useCallback(\n    (row: { [index: string]: string }) => {\n      setRowId(row?._id);\n      const timestamp = parseInt(row?.timestamp);\n      setSelectedTimestamp(parseInt(row?.timestamp));\n      setSelectedDatumType(row?.datumType);\n      if (playerRef) {\n        playerRef.current.seekTo((start + timestamp - sync) / 1000, \"seconds\");\n      }\n    },\n    [playerRef, setSelectedTimestamp, start, sync]\n  );\n\n  const [col, setCol] = useState(\"\");\n  const [datumTypes, setDatumTypes] = useState<string[]>(defaultDatumTypes);\n  const [count, setCount] = useState<ValueCount[] | undefined>([]);\n\n  useEffect(() => {\n    const logs = logData.filter((log) => datumTypes.includes(log.datumType));\n    const originalCountCol = originalLogColumns.map((col) => ({\n      col,\n      count: Object.entries(_.countBy(logs?.map((item) => item[col]))),\n    }));\n    const countCol = originalLogColumns.map((col) => ({\n      col,\n      count: Object.entries(_.countBy(logState?.map((item) => item[col]))),\n    }));\n    const selectedCount = countCol.find((item) => item.col === col)?.count;\n    const originalSelectedCount = originalCountCol.find(\n      (item) => item.col === col\n    )?.count;\n\n    setCount(\n      originalSelectedCount?.map((item) => {\n        if (selectedCount?.map((val) => val[0]).includes(item[0])) {\n          const lookup = selectedCount.find((val) => val[0] === item[0]);\n          if (lookup === undefined) {\n            throw new Error(\"no lookup\");\n          }\n          const count = lookup[1];\n          if (count === item[1]) {\n            return {\n              value: item[0],\n              count: count,\n              checked: true,\n              total: item[1],\n            };\n          }\n          return {\n            value: item[0],\n            count: count,\n            checked: false,\n            total: item[1],\n          };\n        } else {\n          return { value: item[0], count: 0, checked: false, total: item[1] };\n        }\n      })\n    );\n  }, [col, datumTypes, logData, logState, originalLogColumns]);\n\n  const CellRenderer: GridCellRenderer = ({\n    columnIndex,\n    key,\n    rowIndex,\n    style,\n  }) => {\n    if (logState) {\n      const logColumns = originalLogColumns.filter(\n        (_, index) => showColumnIndex[index]\n      );\n      const column = logColumns[columnIndex];\n      const row = logState[rowIndex];\n      if (rowIndex === 0) {\n        return (\n          <CustomCol key={key} style={style} className=\"cell\">\n            {columnIndex === 0 ? \"Datetime\" : column}\n          </CustomCol>\n        );\n      }\n\n      const value =\n        columnIndex !== 0\n          ? row && row[column] && row[column].toString()\n          : row && dayjs(parseInt(row[column])).format(\"MM/DD hh:mm:ss.SSS\");\n\n      return (\n        <CustomRow\n          key={key}\n          style={style}\n          className=\"cell\"\n          passed={\n            linked ? sec + sync - start >= parseInt(row?.timestamp) : false\n          }\n          selected={row?._id === rowId}\n          onClick={() => onClickRow(row)}\n        >\n          {value}\n          {/* <Tooltip title={value}>{value}</Tooltip> */}\n        </CustomRow>\n      );\n    }\n  };\n  const [passedIndex, setPassedIndex] = useState(0);\n\n  useEffect(() => {\n    console.log(passedIndex);\n  }, [passedIndex]);\n  useEffect(() => {\n    const rowIndex = logState\n      ? logState.findIndex(\n          (item) => sec + sync - start <= parseInt(item?.timestamp)\n        )\n      : 0;\n    const row = logState?.find(\n      (item) => sec + sync - start <= parseInt(item?.timestamp)\n    );\n    setPassedIndex(rowIndex);\n\n    // if (playerRef && row) {\n    //   const timestamp = parseInt(row?.timestamp);\n    //   playerRef.current.seekTo((start + timestamp - sync) / 1000, \"seconds\");\n    // }\n    if (row && row._id) {\n      setRowId(row._id);\n    }\n  }, [logState, playerRef, sec, start, sync]);\n\n  const onClickFilter = useCallback(\n    (value: string, checked: boolean) => {\n      if (checked) {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (item === true && datumTypes.includes(logData[i].datumType)) {\n              return logData[i][col] !== value;\n            } else {\n              return item;\n            }\n          })\n        );\n      } else {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (item === false && datumTypes.includes(logData[i].datumType)) {\n              return logData[i][col] === value;\n            } else {\n              return item;\n            }\n          })\n        );\n      }\n    },\n    [col, datumTypes, logData]\n  );\n\n  const onSelectAllValues = useCallback(\n    (e: CheckboxChangeEvent) => {\n      if (!e.target.checked || e.target.indeterminate) {\n        setShowRowIndex((prev) => prev.map(() => false));\n      } else {\n        setShowRowIndex((prev) =>\n          prev.map((item, i) => {\n            if (datumTypes.includes(logData[i].datumType)) {\n              return true;\n            }\n            return item;\n          })\n        );\n      }\n    },\n    [datumTypes, logData]\n  );\n\n  const [valueList, setValueList] = useState<ValueCount[] | undefined>([]);\n\n  useEffect(() => {\n    setValueList(count);\n  }, [count, originalLogColumns]);\n\n  const onChangeSearchValue: React.ChangeEventHandler<HTMLInputElement> =\n    useCallback(\n      (e) => {\n        setValueList(\n          count?.filter((item) =>\n            item.value.toLowerCase().includes(e.target.value.toLowerCase())\n          )\n        );\n      },\n      [count]\n    );\n\n  const colToIndex = useCallback(\n    (col: string) => {\n      const colIndex = originalLogColumns\n        .map((item, i) => ({ name: item, index: i }))\n        .filter((item) => showColumnIndex[item.index]);\n      return colIndex?.find((item) => item.name === col)?.index;\n    },\n    [originalLogColumns, showColumnIndex]\n  );\n  const getColumnWidth: (params: Index) => number = useCallback(\n    ({ index }) => {\n      if (index === 0) {\n        return 150;\n      } else if (index === colToIndex(\"datumType\")) {\n        return 150;\n      } else if (index === colToIndex(\"type\")) {\n        return 250;\n      } else if (index === colToIndex(\"name\")) {\n        return 100;\n      } else if (index === colToIndex(\"packageName\")) {\n        return 300;\n      } else if (index === colToIndex(\"_id\")) {\n        return 0;\n      }\n      return 70;\n    },\n    [colToIndex]\n  );\n\n  return (\n    <div className=\"w-full h-screen\">\n      {/* <div>\n        sec:{sec}, sync: {sync}, timestamp: {selectedTimestamp}, start: {start},\n        sec+sync: {sec + sync}\n      </div> */}\n      <Styles>\n        <AutoSizer>\n          {({ height, width }) => (\n            <MultiGrid\n              height={height}\n              rowHeight={30}\n              width={width}\n              fixedColumnCount={1}\n              fixedRowCount={1}\n              cellRenderer={CellRenderer}\n              styleTopLeftGrid={{\n                borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n              }}\n              styleBottomLeftGrid={{\n                borderRight: \"1px solid rgba(0, 0, 0, 0.5)\",\n              }}\n              rowCount={showRowIndex.filter(Boolean).length}\n              columnCount={showColumnIndex.filter(Boolean).length}\n              columnWidth={getColumnWidth}\n              scrollToRow={passedIndex}\n              scrollToAlignment=\"center\"\n            />\n          )}\n        </AutoSizer>\n      </Styles>\n      <div className=\"flex\">\n        <div className=\"flex flex-col ml-4\">\n          <div className=\"text-lg font-bold\">Show Columns</div>\n          <ShowColumns\n            originalLogColumns={originalLogColumns}\n            setShowColumnIndex={setShowColumnIndex}\n            setCol={setCol}\n            logData={logData}\n            setDatumTypes={setDatumTypes}\n            setShowRowIndex={setShowRowIndex}\n          />\n        </div>\n        {(col !== \"\" || valueList?.length === 0) && (\n          <div className=\"flex flex-col ml-4\">\n            <div className=\"text-lg font-bold\">Column Filter - {col}</div>\n            <Input size=\"small\" onChange={onChangeSearchValue} />\n            <div className=\"p-1\">\n              <Checkbox\n                checked={count\n                  ?.map((item) => item.checked)\n                  .every((item) => item === true)}\n                indeterminate={\n                  !count\n                    ?.map((item) => item.checked)\n                    .every((item) => item === true) &&\n                  count\n                    ?.map((item) => item.checked)\n                    .some((item) => item === true)\n                }\n                onChange={onSelectAllValues}\n              >\n                Select All\n              </Checkbox>\n            </div>\n            <div className=\"h-40 overflow-auto\">\n              {valueList\n                ?.sort((a, b) => b.total - a.total)\n                .map((item, index) => {\n                  return (\n                    <div className=\"p-1\" key={index}>\n                      <Checkbox\n                        checked={item.checked}\n                        indeterminate={item.count !== 0 && !item.checked}\n                        onClick={() => onClickFilter(item.value, item.checked)}\n                      >\n                        {item.value} ({item.count}/{item.total})\n                      </Checkbox>\n                    </div>\n                  );\n                })}\n            </div>\n          </div>\n        )}\n        <div className=\"ml-auto\">\n          <TaskSheet\n            timestamp={selectedTimestamp.toString()}\n            datumType={selectedDatumType}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst Styles = styled.div`\n  width: 100%;\n  height: 70%;\n  margin: 1rem;\n\n  .cell {\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`;\n\nconst CustomRow = styled.div<{ passed: boolean; selected: boolean }>`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  padding-left: 0.25rem;\n  line-height: 30px;\n  ${({ passed }) =>\n    passed &&\n    `\n    background-color: #bdbdbd;\n  `}\n  ${({ selected }) =>\n    selected &&\n    `\n    background-color: #000000;\n    color: white;\n  `}\n`;\n\nconst CustomCol = styled.div`\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  border-right: 1px solid rgba(0, 0, 0, 0.06);\n  padding-left: 0.25rem;\n  background-color: #fafafa;\n  line-height: 30px;\n`;\n\nexport default LogTable;\n","import React, { ReactElement } from \"react\";\nimport ReactPlayer from \"react-player\";\n\ninterface Props {\n  url: string;\n  setSec: React.Dispatch<React.SetStateAction<number>>;\n  setSync: React.Dispatch<React.SetStateAction<number>>;\n  setStart: React.Dispatch<React.SetStateAction<number>>;\n  selectedTimestamp: number;\n  playerRef: React.LegacyRef<ReactPlayer> | undefined;\n  setPlayedSec: React.Dispatch<React.SetStateAction<number>>;\n  playedSec: number;\n}\n\ninterface Progress {\n  played: number;\n  playedSeconds: number;\n  loaded: number;\n  loadedSeconds: number;\n}\n\nfunction LogPlayer({\n  url,\n  setSec,\n  setPlayedSec,\n  playerRef,\n}: Props): ReactElement {\n  const onProgress = (e: Progress) => {\n    setSec(Math.floor(e.playedSeconds * 1000));\n    setPlayedSec(Math.floor(e.playedSeconds * 1000));\n  };\n\n  return (\n    <div className=\"flex flex-col h-full w-full pl-4 pt-2 pb-14 justify-center items-center\">\n      <ReactPlayer\n        url={url}\n        controls={true}\n        width=\"100%\"\n        height=\"100%\"\n        onProgress={onProgress}\n        progressInterval={10}\n        ref={playerRef}\n      />\n    </div>\n  );\n}\n\nexport default LogPlayer;\n","import React, { useCallback, useRef, useState } from \"react\";\n\nimport LogTable from \"./components/LogTable\";\nimport \"antd/dist/antd.css\";\nimport LogPlayer from \"./components/LogPlayer\";\nimport ReactPlayer from \"react-player\";\nimport { Radio, RadioChangeEvent, Switch } from \"antd\";\n\nfunction App() {\n  const [linked, setLinked] = useState<boolean>(true);\n  const [video, setVideo] = useState<string>(\"\");\n  const [sync, setSync] = useState<number>(1629722777027);\n  const [sec, setSec] = useState<number>(0);\n  const [start, setStart] = useState<number>(29257);\n  const [playedSec, setPlayedSec] = useState(0);\n  const [selectedTimestamp, setSelectedTimestamp] = useState<number>(0);\n  const playerRef = useRef() as React.LegacyRef<ReactPlayer> | undefined;\n\n  // const onClickSync = useCallback(() => {\n  //   setSync(selectedTimestamp);\n  //   setStart(playedSec);\n  // }, [playedSec, selectedTimestamp, setStart, setSync]);\n\n  const onChangeVideo = useCallback((e: RadioChangeEvent) => {\n    setVideo(e.target.value);\n    if (linked) {\n      if (e.target.value === \"7\") {\n        setStart(29257);\n        setSync(1629722777027);\n      } else if (e.target.value === \"8\") {\n        setStart(27275);\n        setSync(1629723368224);\n      } else if (e.target.value === \"9\") {\n        setStart(28561);\n        setSync(1629724008156);\n      } else if (e.target.value === \"10\") {\n        setStart(28977);\n        setSync(1629729295883);\n      } else if (e.target.value === \"11\") {\n        setStart(26999);\n        setSync(1629729867290);\n      } else if (e.target.value === \"12\") {\n        setStart(37468);\n        setSync(1629730415581);\n      }\n    }\n  }, [linked]);\n\n  return (\n    <div className=\"flex h-screen overflow-hidden\">\n      <div className=\"w-3/4 h-screen\">\n        <LogTable\n          fileName=\"raw.csv\"\n          sec={linked ? sec : 0}\n          sync={sync}\n          setSelectedTimestamp={setSelectedTimestamp}\n          playerRef={linked && playerRef}\n          setSync={setSync}\n          selectedTimestamp={selectedTimestamp}\n          start={start}\n          linked={linked}\n        />\n      </div>\n      <div className=\"flex flex-col w-1/4 h-screen items-center\">\n        <div className=\"flex justify-center h-8 items-center pt-2\">\n          <div className=\"mr-2\">Link:</div>\n          <Switch checked={linked} onChange={(checked) => setLinked(checked)} />\n          <div className=\"mx-2\"></div>\n          <Radio.Group\n            defaultValue=\"7\"\n            size=\"small\"\n            buttonStyle=\"solid\"\n            onChange={onChangeVideo}\n            value={video}\n          >\n            <Radio.Button value=\"7\">7</Radio.Button>\n            <Radio.Button value=\"8\">8</Radio.Button>\n            <Radio.Button value=\"9\">9</Radio.Button>\n            <Radio.Button value=\"10\">10</Radio.Button>\n            <Radio.Button value=\"11\">11</Radio.Button>\n            <Radio.Button value=\"12\">12</Radio.Button>\n          </Radio.Group>\n          {/* <div className=\"mx-2\"></div>\n          <Button onClick={onClickSync} size=\"small\">\n            Sync\n          </Button> */}\n        </div>\n        {/* <div>\n          start: {start}, sync: {sync}\n        </div> */}\n        <LogPlayer\n          url={`${\n            process.env.NODE_ENV === \"development\" ? \"abc-analyzer/\" : \"\"\n          }videos/${video}.webm`}\n          setSec={setSec}\n          setSync={setSync}\n          setStart={setStart}\n          setPlayedSec={setPlayedSec}\n          selectedTimestamp={selectedTimestamp}\n          playerRef={playerRef}\n          playedSec={playedSec}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}